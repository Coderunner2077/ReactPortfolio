navbar:
  projects: Projects
  about: About Me
  contact: Contact
  hire: Hire Me
home:
  hi: HI, I AM GUILLAUME
  position: A React / NodeJS Fullstack Developer & Coder for life!
main:
  follow: Follow me
  project:
    no_id: Project with this id does not exist
    not_found: Project not found
  contact:
    details: Contact details
  repo: Github Repository
form:
  title:
    contact: Contact Form
    hire: What project are you looking for?
  name: Full Name
  email: Email
  subject: Subject
  message: Message
  send:
    message: Send Message
    request: Send Request
  placeholder:
    name: Your Name
    email: Your Email
    subject: Subject
  project:
    app: Web Application
    static: Static Site
    e_commerce: Ecommerce Store
    frontend: React Frontend
    backend: NodeJS Backend
    ui: UI/UX Design
    graphql: GraphQL API
    rest: REST API
projects:
  title: Projects portfolio
  intro: Search projects by title or filter by category
  search: Search Projects
  more: More Projects
  heading: Description
  related: Related Projects
  category:
    all: All Projects
    ecommerce: Ecommerce Website
    web: Web Application
    mern: MERN Project
    react: React Project
    express: Express Project
    symfony: Symfony PHP Project
    php: PHP Project
    java: Java Project
    c: C Project
    npm: NPM Module
about:
  project: About Project
  bio1: Hi, I'm Guillaume Coderunner, a React / NodeJS full-stack developer. I love working with web technologies and exploring the JavaScript ecosystem.
  bio2: I am passionate about programming, implementing new technologies in my projects in a creative way. My goal is to thrive for perfection by using the best practices to the best of my ability.
  bio3: I like both frontend and backend sides of the development. Being a self-taught programmer, I've come a long way learning different languages, including C, JAVA, PHP, and finally React/NodeJS ecosystem in which I've been swimming these last few years. Currently I'm doing React and NodeJS projects for my clients.
data:
  name: Name
  category: Category
  website: Website
  source: Source Code
  tools: Tools & Technologies
  created: Created
  updated: Updated
  links: External links
  npm:
    title: GraphQL Secure Data
    name: GraphQL Security Module
    website: https://www.npmjs.com/package/graphql-secure-data
    details_1: GraphQL Secure Data protects your application from excessive and/or abusive data fetching. Using an intuitive restrictions layer, you'll be able to secure your data from unintended queries by specifying the maximum allowed nested fields for your data types. These restrictions are applied to all of the queries, mutations and subscriptions that return the specified data types.
    details_2: Limiting GraphQL queries as a solution to increase security and performance of your GraphQL API can only be worth it if the strategy includes ease of use and maintaining a delicate balance between flexibility and safety. And this simple idea inspired me to create the module graphql-secure-data which is an easy to use middleware allowing your GraphQL server to filter queries based on the shape of the requested data while maintaining a reasonable and safe level of flexibility of GraphQL.
    details_3: "I wrote an article about this module. You can find it by following the link below:"
    date: September 2022
    tags: NPM Module / GraphQL / NodeJS
    link_title: How to limit GraphQL queries for better security and performance
  instashop:
    title: Instashop
    name: Next.js Ecommerce App
    website: https://instashop-seven.vercel.app
    details_1: This is an e-commerce store, developed using Next.js, Sanity and Stripe, deployed with Vercel.
    details_2: Sanity being a platform to put products online and Stripe the platform to process online payments, it is with Next.js that this ecommerce store has been developed. What is Next.js?
    details_3: Well, Next.js is a framework (i.e. a toolkit for web development) itself based on another framework, i.e. React, but unlike this one it also allows backend development and server-side rendering.
    details_4: After a first phase of development which, full disclorure, I did by following a tutorial on Youtube (link at the bottom of the page) while adding my own touch by using other tools like Tailwind CSS for the design and Redux for the cart management, the first impression I had was that Next.js allowed a much smoother and more productive development experience, it looked like a perfect tool. But I had to go back to this project to complete and add other features to realize that Next.js is not so perfect after all.
    details_5: Without going into too much detail, Next.js is a great toolbox when everything works and a black box when something goes wrong, in which case it takes more time to study the box to find the solution than if you found the solution using tools that are admittedly a bit more rudimentary but also more transparent.
    details_6: For example, I was surprised that I had to find a workaround to use database strategy for login sessions (Next.js using JWT tokens by default, which has some security risks nonetheless).
    details_7: "List of added features:"
    list:
      1: Possibility to authenticate users with their Github account or with a username and password
      2: Possibility to leave a review on the products
      3: Possibility to modify your profile data, including add/update or remove the profile picture
      4: Save product orders in a database and displaying them on the site
      5: Contact form linked to an email server
    date: August 15th 2022 - August 25th, 2022
    tags: Next.js / Sanity / Stripe
    update: November 20th, 2022
    link:
      1: Build and Deploy a Modern Full Stack ECommerce React Application with Stripe
  corunner:
    title: Corunner Workout Platform
    name: Corunner Fullstack App
    website: https://corunner.app
    frontend_tools: Frontend Tools & Tech
    backend_tools: Backend Tools & Tech
    details_1: Corunner is a Workout Network Platform. A place to schedule, share and plan your physical exercises and allow people from your town to join you.
    details_2: "Corunner is packed with exciting features, including the ability to:"
    date: August 2021 - Mai 2022
    tags: Fullstack / React / Express / GraphQL
    list:
      1: Create customized workout routes. Different display modes exists for the workout
      2: Allow other users to join directly your workout by choosing Public mode
      3: Allow only certain users to join your workout by choosing Protected mode that prompts users to apply first.
      4: Plan your workout route just for yourself by choosing Private mode
      5: Of course, you can apply to or join other users'workouts
      6: Chat with users via real time private messages
      7: Block users to prevent them from writing to you private messages
  react:
    title: React Authentication Frontend
    name: React Frontend
    date: Jully, 2021
    tags: React / Frontend / MERN
    details_1: Member space allowing users to authenticate, view their stored information and log out.
    details_2: This is the frontend of the MERN (MongoDB - Express - React - NodeJS) Projet.
  node:
    title: Node Authentication Backend
    date: Jully, 2021
    name: Node Backend
    tags: NodeJS / Express / Passport / MongoDB
    details_1: API for the Member Space Authentication project.
    details_2: This is the backend of the MERN (MongoDB - Express - React - NodeJS) Project.
  memory:
    title: React Memory Game
    date: Jully, 2020
    name: React Memory Game
    tags: React / Game
    details_1: Simple React memory game project
    details_2: Player has to find the respective pairs of icons in the grid
  minichat:
    title: Node Minichat
    date: August 2020
    tags: NodeJS / Express / Socket.io / Ejs
    details_1: Node Express Minichat project
    details_2: This basic minichat uses socket.io to allow instant communication between users
  symfony:
    title: Symfony Social Network
    date: Jan 2018 - Nov 2018
    tags: Symfony / PHP / Web Application
    details_1: Social network allowing everyone to publish articles and/or posts.
    details_2: Project created using the PHP language and the Symfony framework (Symfony 3 then migrated to Symfony 4)
  php:
    title: PHP Member Space
    date: April 2017
    name: PHP Member Space
    tags: PHP / Member Space
    details_1: Basic PHP member space for authentication
    details_2: Project created as part of my PHP training
  pendu:
    title: Java Hangman Game
    date: December, 2016
    name: Java - Hangman Game
    tags: Java / MVC / Game
    details_1: Java Hangman game. Player has to guess a word randomly chosen from a dictionnary
    details_2: Project created as part of my Java training. This project uses MVC pattern.
  garage:
    title: Java Garage
    date: October, 2016
    name: Java Garage App
    tags: Java
    details_1: Very basic garage management app
    details_2: Project created as part of my Java training. This project had helped me to fully grasp such concepts as classes, inheritance and implementing interfaces
  player:
    title: Audio Player
    date: October, 2016
    name: Audio Player
    tags: C / Programming
    details_1: Audio Player created with C programming language and FMOD library
    details_2: Project created as part of my C training. C was the language that introduced me to coding. Even if I stopped programming in C, I think my knowledge of C was and still is a huge boost for my learning process of other languages
flash:
  error:
    server: Oops, Sorry! A server error occured. Please try again later.
    network: Oops, Sorry! A network error occured. Please try again later.
    mode: This action is only available in production environment
  success:
    hire: We've received your request and will get back to you within 48 hours. Thank you!
    contact: We've received your message and will get back to you within 48 hours. Thank you!
